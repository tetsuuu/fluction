name: Deploy Cloud Functions
on:
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

jobs:
  setup:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        paths: [functions]
    steps:
    - uses: actions/checkout@v4
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version-file: ${{ matrix.paths }}/.tool-versions

    - uses: ./.github/actions/cache_dependencies
      with:
        file_name: yarn.lock
        save_cache: "true"
        working_directory: ${{ matrix.paths }}

    - name: Install dependencies
      working-directory: ${{ matrix.paths }}
      run:
        yarn install --frozen-lockfile

  deploy:
    runs-on: ubuntu-latest
    needs: setup
    strategy:
      matrix:
        paths: [functions]
    steps:
      - uses: actions/checkout@v4
      - id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER_ID }}
          service_account: github-deploy@${{ vars.PROJECT_ID }}.iam.gserviceaccount.com

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - uses: ./.github/actions/cache_dependencies
        with:
          file_name: yarn.lock
          working_directory: ${{ matrix.paths }}

      # https://github.com/google-github-actions/deploy-cloud-functions/issues/304
      - name: Deploy Cloud Functions
        run: >-
          gcloud functions deploy ${{ vars.FUNCTIONS_ID }}
          --gen2
          --runtime=nodejs20
          --region=asia-northeast1
          --source=./functions
          --entry-point=helloWorld
          --trigger-http
          --no-allow-unauthenticated
          --set-env-vars GCP_PROJECT=${{ vars.PROJECT_ID }}
          --run-service-account github-deploy@${{ vars.PROJECT_ID }}.iam.gserviceaccount.com
